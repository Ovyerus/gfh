name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

# TODO: figure out OpenSSL issue so linux build can be moved out of the Docker
# image so that we can use `Swatinem/rust-cache` across all of them.
jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - arch: "x86_64"
            libc: "musl"
          - arch: "i686"
            libc: "musl"
          - arch: "armv7"
            libc: "musleabihf"
          - arch: "arm"
            libc: "musleabi"
          - arch: "arm"
            libc: "musleabihf"
    steps:
      - uses: actions/checkout@v2
      - name: Pull Docker image
        run: |
          docker pull messense/rust-musl-cross:${{ matrix.arch }}-${{ matrix.libc }}

      - name: Add packages, build & strip binaries
        shell: bash
        run: |
          shopt -s expand_aliases
          alias rust-musl-builder='docker run -i -v "$(pwd)":/home/rust/src messense/rust-musl-cross:${{ matrix.arch }}-${{ matrix.libc }}'
          rust-musl-builder sudo apt-get update && sudo apt-get install pkg-config libpcsclite-dev libudev-dev
          rust-musl-builder cargo build --release
          rust-musl-builder musl-strip -s /home/rust/src/target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/gfh
          rust-musl-builder musl-strip -s /home/rust/src/target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/gfh-keygen

      - uses: actions/upload-artifact@v2
        with:
          name: "gfh-linux-${{ matrix.arch }}-${{ matrix.libc }}"
          path: |
            target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/gfh
            target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/gfh-keygen

  build-macos:
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v2

      - name: Install target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-apple-darwin
          target: ${{ matrix.target }}-apple-darwin
          override: true
          profile: minimal

      - uses: Swatinem/rust-cache@v2
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          key: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}-apple-darwin

      - uses: actions/upload-artifact@v2
        with:
          name: gfh-macos-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}-apple-darwin/release/gfh
            target/${{ matrix.target }}-apple-darwin/release/gfh-keygen

  build-windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2

      - name: Install target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-pc-windows-msvc
          target: x86_64-pc-windows-msvc
          override: true
          profile: minimal

      - uses: Swatinem/rust-cache@v2
        if: "!startsWith(github.ref, 'refs/tags/')"

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v2
        with:
          name: "gfh-windows-x86_64-msvc"
          path: |
            target/x86_64-pc-windows-msvc/release/gfh.exe
            target/x86_64-pc-windows-msvc/release/gfh-keygen.exe

  # TODO: clippy lints & rustfmt

  create-release:
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-linux
      - build-macos
      - build-windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3

      - name: Rename files
        run: |
          mkdir out && cd out

          declare -a arr=(
            "windows-x86_64-msvc"
            "macos-x86_64"
            "macos-aarch64"
            "linux-x86_64-musl"
            "linux-i686-musl"
            "linux-armv7-musleabihf"
            "linux-arm-musleabi"
            "linux-arm-musleabihf"
          )

          for target in "${arr[@]}"
          do
            inputfiles="../gfh-$target/*"

            if [[ "$target" == *windows* ]]; then
              filename="gfh-$target.zip"
              7z -y a $filename $inputfiles
            else
              filename="gfh-$target.tar.gz"
              tar czf $filname $inputfiles
            fi

            sha256sum "$filename" >> "checksums.txt"
          done

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          body: Update the description for the release!
          draft: true
          files: ./out/*

      # - name: Update Homebrew tap
      #   uses: mislav/bump-homebrew-formula-action@v2
      #   with:
      #     formula-name: gfh
      #     homebrew-tap: Ovyerus/homebrew-tap
      #   env:
      #     COMMITTER_TOKEN: ${{ secrets.TAP_COMMITTER_TOKEN }}
